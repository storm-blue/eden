<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eden.lottery.mapper.UserMapper">

    <!-- 结果映射 -->
    <resultMap id="UserResultMap" type="com.eden.lottery.entity.User">
        <id property="userId" column="user_id"/>
        <result property="remainingDraws" column="remaining_draws"/>
        <result property="dailyDraws" column="daily_draws"/>
        <result property="wishCount" column="wish_count"/>
        <result property="residence" column="residence"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="lastRefreshDate" column="last_refresh_date"/>
    </resultMap>

    <!-- 插入用户 -->
    <insert id="insert" parameterType="com.eden.lottery.entity.User">
        INSERT INTO users (user_id, remaining_draws, daily_draws, wish_count, residence, create_time, update_time, last_refresh_date)
        VALUES (#{userId}, #{remainingDraws}, #{dailyDraws}, #{wishCount}, #{residence}, #{createTime}, #{updateTime}, #{lastRefreshDate})
    </insert>

    <!-- 根据用户ID查询用户 -->
    <select id="selectByUserId" parameterType="string" resultMap="UserResultMap">
        SELECT user_id, remaining_draws, daily_draws, wish_count, residence, create_time, update_time, last_refresh_date
        FROM users
        WHERE user_id = #{userId}
    </select>

    <!-- 更新用户信息 -->
    <update id="update" parameterType="com.eden.lottery.entity.User">
        UPDATE users
        SET remaining_draws = #{remainingDraws},
            daily_draws = #{dailyDraws},
            wish_count = #{wishCount},
            residence = #{residence},
            update_time = #{updateTime},
            last_refresh_date = #{lastRefreshDate}
        WHERE user_id = #{userId}
    </update>

    <!-- 扣减用户抽奖次数 -->
    <update id="decreaseRemainingDraws">
        UPDATE users
        SET remaining_draws = remaining_draws - 1,
            update_time = datetime('now', 'localtime')
        WHERE user_id = #{userId}
          AND remaining_draws > 0
    </update>

    <!-- 增加用户许愿次数 -->
    <update id="increaseWishCount">
        UPDATE users
        SET wish_count = wish_count + 1,
            update_time = datetime('now', 'localtime')
        WHERE user_id = #{userId}
    </update>

    <!-- 扣减用户许愿次数 -->
    <update id="decreaseWishCount">
        UPDATE users
        SET wish_count = wish_count - 1,
            update_time = datetime('now', 'localtime')
        WHERE user_id = #{userId}
          AND wish_count > 0
    </update>

    <!-- 更新用户居住地点 -->
    <update id="updateResidence">
        UPDATE users
        SET residence = #{residence},
            update_time = datetime('now', 'localtime')
        WHERE user_id = #{userId}
    </update>

    <!-- 刷新用户每日抽奖次数 -->
    <update id="refreshDailyDraws">
        UPDATE users
        SET remaining_draws = remaining_draws + daily_draws,
            update_time = #{refreshTime},
            last_refresh_date = #{refreshTime}
        WHERE user_id = #{userId}
    </update>

    <!-- 获取需要刷新的用户列表 -->
    <select id="selectUsersNeedRefresh" resultMap="UserResultMap">
        SELECT user_id, remaining_draws, daily_draws, wish_count, residence, create_time, update_time, last_refresh_date
        FROM users
        WHERE date(last_refresh_date) &lt; date(#{todayStart})
    </select>

    <!-- 批量刷新用户每日抽奖次数 -->
    <update id="batchRefreshDailyDraws">
        UPDATE users
        SET remaining_draws = remaining_draws + daily_draws,
            update_time = #{refreshTime},
            last_refresh_date = #{refreshTime}
        WHERE date(last_refresh_date) &lt; date(#{refreshTime})
    </update>

    <!-- 获取所有用户 -->
    <select id="selectAll" resultMap="UserResultMap">
        SELECT user_id, remaining_draws, daily_draws, wish_count, residence, create_time, update_time, last_refresh_date
        FROM users
        ORDER BY create_time DESC
    </select>

    <!-- 删除用户 -->
    <delete id="deleteByUserId">
        DELETE FROM users WHERE user_id = #{userId}
    </delete>

</mapper>
